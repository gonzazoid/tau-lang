(export nat as
      (nat => nat nat)
      (nat a => match a
        | O => O
        | S a' => (S (nat nat a'))
      )
)

(export sum as
  (sum nat => sum sum nat)
    (sum nat a b =>
        match a
        | O => nat b
        | S a' => S (sum sum nat a' b)
    )
    nat
)

(export lt as (
    (lt lt' a b => lt lt lt' a b)
    (lt lt' a b =>
        match b
        | O => false
        | S b' => lt' lt' lt a b'
    )
    (lt' lt a b' =>
        match a
        | O => true
        | S a' => lt lt lt' a' b'
    )
))

(export ge as (
    (ge ge' isZero a b => ge ge ge' isZero a b)
    ( ge ge' isZero a b =>
        match a
        | O => isZero b
        | S a' => ge' ge' ge isZero a' b
    )
    (ge' ge isZero a' b =>
        match b
        | O => true
        | S b' => ge ge ge' isZero a' b'
    )
    (x =>
        match x
        | O => true
        | S x' => false
    )
))
